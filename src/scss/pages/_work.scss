@use "../utils/mixins";
@import "../utils/variables";

.work-main {
  display: flex;
  flex-direction: column;
  gap: 2rem;
  margin-top: 20vh;

  @include mixins.respond(phone) {
    margin-top: 15vh;
  }
}

.header-text {
  font-size: $header-letters;
  line-height: $header-line-height;

  @include mixins.respond(phone) {
    font-size: $header-letters-mobile;
    line-height: $header-line-height-mobile;
  }
}

.filter {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  margin: 5vh 0;
  padding: 0 5vw;
}

.filter-items {
  display: grid;
  grid-template-areas:
    "all arc int pro res"
    ". exh edu . .";
  gap: 1rem;

  @include mixins.respond(phone) {
    grid-template-areas:
      "all . arc . pro"
      ". . int . exh"
      ". . res . edu";
  }

  .all {
    grid-area: all;
  }
  .arc {
    grid-area: arc;
  }
  .int {
    grid-area: int;
  }
  .pro {
    grid-area: pro;
  }
  .res {
    grid-area: res;
  }
  .exh {
    grid-area: exh;
  }
  .edu {
    grid-area: edu;
  }

  button {
    font-size: $filter-letters;
    border: none;
    background-color: transparent;
    color: black;

    &:hover {
      text-decoration: underline;
      text-decoration-thickness: 1.5px;
      cursor: pointer;
    }
  }
}

.accordion {
  &-template {
    display: grid;
    grid-template-columns: repeat(5, 5fr);
    padding: 1.5vh 5vw;
    border-top: 1px solid black;
    border-bottom: 1px solid black;
    font-size: 1.8rem;
  }

  &-item {
    background-color: transparent;
    border-bottom: 1px solid black;

    &.disabled {
      color: #b3b3b3;
      border-bottom: 1px solid #b3b3b3;
    }
  }

  &-button {
    width: 100%;
    background-color: transparent;
    color: black;
    border: none;
    outline: none;
    cursor: pointer;
    padding: 1.5vh 5vw;
    display: grid;
    grid-template-columns: 10fr repeat(3, 5fr);
    font-size: 1.8rem;

    &.disabled {
      color: #b3b3b3;
    }

    &:hover {
      text-decoration: none;
    }

    &-title {
      display: flex;
      align-items: center;
    }

    &-type {
      display: flex;
      align-items: center;
      grid-column-start: 2;
      grid-column-end: 4;
    }

    &-year {
      grid-column-start: 4;
      display: flex;
      align-items: center;
    }
  }

  &-content {
    padding: 0 5vw;
    overflow: hidden;
    max-height: 0;
    transition: max-height 0.75s;
    display: grid;
    grid-template-columns: 10fr repeat(3, 5fr);
    grid-template-rows: 50vh;

    &.active {
      max-height: 50vh;
    }

    &-text {
      padding: 1rem 0rem 2rem 0rem;
      display: flex;
      justify-content: space-between;
      flex-direction: column;
      font-size: 2.1vh;
      line-height: 3.4vh;
      grid-column-start: 3;
      grid-column-end: 5;

      a svg {
        width: 1.1em;
        height: 1.1em;
        vertical-align: text-bottom;
      }

      a:link,
      :visited,
      :active {
        color: inherit;
      }

      a:hover {
        text-decoration: underline;
        text-decoration-thickness: 1.5px;
      }

      .template {
        font-size: 1.7vh;
      }
    }

    &-picture-1 {
      grid-column-start: 1;
      grid-column-end: 2;
      padding: 1rem 1rem 2rem 0rem;

      @include mixins.respond(phone) {
        display: none;
      }

      img {
        height: 100%;
        width: 100%;
        object-fit: cover;
        filter: opacity(85%);
      }
    }

    &-picture-2 {
      grid-column-start: 2;
      grid-column-end: 3;
      padding: 1rem 1rem 2rem 0rem;

      @include mixins.respond(phone) {
        grid-column-start: 1;
        grid-column-end: 3;
      }

      img {
        height: 100%;
        width: 100%;
        object-fit: cover;
        filter: opacity(85%);
      }
    }
  }
}

// Animations

@keyframes fade-out {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.fade-out {
  animation: fade-out 0.5s ease-in-out forwards;
}

.fade-in {
  animation: fade-in 0.5s ease-in-out forwards;
}
