@use "../../scss/utils/mixins";
@import "../../scss/utils/variables";

.categories-filter {
  display: flex;
  flex-direction: column;
  margin: 0 0 $base-vertical-unit 0;
  padding: 0 $base-horizontal-unit;

  @include mixins.respond(phone) {
    margin: $base-vertical-unit 0;
  }
}

.work-categories {
  display: grid;
  row-gap: $base-vertical-unit * 0.5;
  grid-template-columns: repeat(5, 1fr);
  grid-template-areas:
    "all arc int pro res"
    ". exh edu . .";

  @include mixins.respond(phone) {
    grid-template-areas:
      "all . arc . pro"
      ". . int . exh"
      ". . res . edu";
  }

  .all {
    grid-area: all;
  }
  .arc {
    grid-area: arc;
  }
  .int {
    grid-area: int;
  }
  .pro {
    grid-area: pro;
  }
  .res {
    grid-area: res;
  }
  .exh {
    grid-area: exh;
  }
  .edu {
    grid-area: edu;
  }

  button {
    font-size: $font-size-medium;
    border: none;
    background-color: transparent;
    color: black;

    @include mixins.respond(phone) {
      font-size: $font-size-medium-mobile;
    }

    &:hover {
      text-decoration: underline;
      text-decoration-thickness: 1px;
      cursor: pointer;
    }
  }
}

.szh-accordion {
  border-bottom: 1px solid black;
  &__item {
    border-top: 1px solid black;

    &.inactive {
      .szh-accordion__item-btn {
        color: lightgray;
      }
    }

    &-btn {
      cursor: pointer;
      display: grid;
      grid-template-columns: 10fr repeat(3, 5fr);
      grid-template-areas: "title type type year";
      justify-items: start;
      width: 100%;
      margin: 0;
      padding: $base-vertical-unit * 0.5 $base-horizontal-unit;
      font-size: $font-size-medium;
      background-color: transparent;
      border: none;
      color: black;

      @include mixins.respond(phone) {
        font-size: $font-size-medium-mobile;
      }

      &:hover {
        color: orange;
      }

      & .title {
        grid-area: title;
      }

      & .type {
        grid-area: type;
      }

      & .year {
        grid-area: year;
      }
    }

    &-content {
      border-top: 1px solid black;
    }

    &-panel {
      padding: $base-vertical-unit * 0.5 0;

      .accordion-item-container {
        padding: 0 $base-horizontal-unit;
        width: 100%;
        display: grid;
        grid-template-columns: 10fr 5fr 5fr;
        gap: $base-vertical-unit * 0.5;

        @include mixins.respond(phone) {
          grid-template-columns: 10fr 5fr;
          gap: $base-vertical-unit * 0.5;

          .small1 {
            display: none;
          }
        }

        .material-symbols-outlined {
          font-size: $font-size-medium;
          vertical-align: text-bottom;

          @include mixins.respond(phone) {
            font-size: $font-size-medium-mobile;
          }
        }

        img {
          height: 100%;
          width: 100%;
          object-fit: cover;
        }

        .description {
          display: flex;
          flex-direction: column;
          justify-content: space-between;
          font-size: $font-size-medium;

          @include mixins.respond(phone) {
            gap: $base-vertical-unit * 2;
            font-size: $font-size-small-mobile;
          }

          .details {
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            height: 30%;
            gap: $base-vertical-unit * 0.4;

            @include mixins.respond(phone) {
              gap: $base-vertical-unit * 0.8;
            }
          }
        }
      }
    }

    &--expanded {
      .szh-accordion__item-btn {
        background-color: white;
      }
    }
  }
}
